# See https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html
kernel.sysrq = 1

# See https://www.kernel.org/doc/Documentation/sysctl/vm.txt

# Available only when CONFIG_COMPACTION is set. When 1 is written to the file,
# all zones are compacted such that free memory is available in contiguous
# blocks where possible. This can be important for example in the allocation of
# huge pages although processes will also directly compact memory as required.
vm.compact_memory = 1

# Contains, as a percentage of total available memory that contains free pages
# and reclaimable pages, the number of pages at which the background kernel
# flusher threads will start writing out dirty data.
vm.dirty_background_ratio = 20

# This tunable is used to define when dirty data is old enough to be eligible
# for writeout by the kernel flusher threads.  It is expressed in 100'ths
# of a second.  Data which has been dirty in-memory for longer than this
# interval will be written out next time a flusher thread wakes up.
dirty_expire_centisecs = 5000

# Contains, as a percentage of total available memory that contains free pages
# and reclaimable pages, the number of pages at which a process which is
# generating disk writes will itself start writing out dirty data.
vm.dirty_ratio = 50

# This is used to force the Linux VM to keep a minimum number
# of kilobytes free.  The VM uses this number to compute a
# watermark[WMARK_MIN] value for each lowmem zone in the system.
# Each lowmem zone gets a number of reserved free pages based
# proportionally on its size.
# 
# Some minimal amount of memory is needed to satisfy PF_MEMALLOC
# allocations; if you set this to lower than 1024KB, your system will
# become subtly broken, and prone to deadlock under high loads.
# 
# Setting this too high will OOM your machine instantly.
vm.min_free_kbytes = 131072 # Double the default. Kill the thing not the system.

# This control is used to define how aggressive the kernel will swap
# memory pages.  Higher values will increase aggressiveness, lower values
# decrease the amount of swap.  A value of 0 instructs the kernel not to
# initiate swap until the amount of free and file-backed pages is less
# than the high water mark in a zone.
swappiness = 100
